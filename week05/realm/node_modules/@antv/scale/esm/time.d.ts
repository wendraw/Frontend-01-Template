import * as moment from 'moment';
import Base, { ScaleConfig } from './base';
declare type Interval = [string, number];
export interface TimeScaleConfig extends ScaleConfig {
    values: Array<number | moment.Moment>;
    min: number | moment.Moment;
    max: number | moment.Moment;
    tickCount: number;
    tickInterval: number;
    showLast: boolean;
}
export default class Time extends Base {
    values: number[];
    min: number;
    max: number;
    /** 强制显示最大日期 */
    showLast: TimeScaleConfig['showLast'];
    tickCount: TimeScaleConfig['tickCount'];
    tickInterval: TimeScaleConfig['tickInterval'];
    interval: Interval;
    breaks: string;
    /** 将定义域转化为时间戳 */
    translate(v: moment.Moment | number): number;
    scale(_value: moment.Moment | number): number;
    invert(scaled: number): moment.Moment;
    protected _initDefaultCfg(): void;
    protected _init(): void;
    protected _setDomain(): void;
    /**
     * todo: 自创算法，融合了d3和pretty，需要大量测例验证
     */
    private _setTicks;
    private _setTicksByInterval;
}
export {};
